{"version":3,"file":"worker/prefabs-filter.js","mappings":"wFAAA,eAqFA,SAASA,EAAWC,EAAqBC,GACvC,OAAID,EAAEE,KAAOD,EAAEC,KAAa,EACxBF,EAAEE,KAAOD,EAAEC,MAAc,EACtB,EAGT,SAASC,EAAWH,EAAsBC,GACxC,OAAKD,EAAEI,MAASH,EAAEG,KACdJ,EAAEI,KAAOH,EAAEG,KAAa,EACxBJ,EAAEI,KAAOH,EAAEG,MAAc,EACtBL,EAAWC,EAAGC,GAHUF,EAAWC,EAAGC,GAU/C,SAASI,EAAkBC,EAAaC,GACtC,IAAIC,GAAY,EAChB,MAAMC,EAAcH,EAAII,QAAQH,GAAQI,IACtCH,EAAYG,EAAEC,OAAS,EAChB,SAASD,cAElB,OAAOH,EAAYC,EAAc,KAjGnC,8BACE,KAAAI,IAAgB,GAChB,KAAAC,YAA2B,GAC3B,KAAAC,iBAAqC,GACrC,KAAAC,OAA+B,KAC/B,KAAAC,SAAgC,GAChC,KAAAC,WAAgC,KAChC,KAAAC,OAAS,GAED,KAAAC,kBAAmB,IAAAC,mBAAiBC,SAAYC,KAAKC,sBACrD,KAAAC,gBAAiD,GAEzD,SACEF,KAAKH,mBAEP,oBACEG,KAAKG,cACLH,KAAKI,aACLJ,KAAKK,OACL,MAAMC,EAAuB,CAAEV,OAAQI,KAAKJ,OAAQW,QAASP,KAAKN,UAClEM,KAAKE,gBAAgBM,SAASC,GAAMA,EAAEH,KAExC,wBAAwBb,GACtB,MAAMiB,EAAIjB,EAAOkB,OACA,IAAbD,EAAErB,OACJW,KAAKP,OAAS,KAEdO,KAAKP,OAAS,IAAImB,EAAkB,IAAIC,OAAOH,EAAG,MAGtD,uBAAuBjB,GACrB,MAAMiB,EAAIjB,EAAOkB,OACA,IAAbD,EAAErB,OACJW,KAAKP,OAAS,KAEdO,KAAKP,OAAS,IAAIqB,EAAiB,IAAID,OAAOH,EAAG,KAAMV,KAAKR,iBAAkBQ,KAAKT,aAGvF,kBAAkBwB,GAChBf,KAAKE,gBAAgBc,KAAKD,GAGpB,cACN,GAAIf,KAAKP,OAAQ,CACf,MAAMwB,EAASjB,KAAKP,OAAOyB,MAAMlB,KAAKV,KACtCU,KAAKJ,OAASqB,EAAOrB,OACrBI,KAAKN,SAAWuB,EAAOE,aACM,IAApBnB,KAAKV,IAAID,QAClBW,KAAKJ,OAAS,aACdI,KAAKN,SAAW,KAEhBM,KAAKJ,OAAS,cACdI,KAAKN,SAAWM,KAAKV,KAIjB,aACN,GAAIU,KAAKL,WAAY,CACnB,MAAM,WAAEA,GAAeK,KACvBA,KAAKN,SAASc,SAASY,IAAM,OAACA,EAAEvC,MA4BpBwC,EA5BoCD,EA4BVE,EA5Ba3B,EA6BhD4B,KAAKC,MAAMD,KAAKE,MAAMJ,EAAaK,EAAIJ,EAAWI,IAAM,GAAKL,EAAaM,EAAIL,EAAWK,IAAM,KADxG,IAAkBN,EAA0BC,UA1BtCtB,KAAKN,SAASc,SAASY,GAAOA,EAAEvC,KAAO,OAGnC,OACFmB,KAAKL,YACPK,KAAKJ,OAAS,GAAGI,KAAKJ,2CACtBI,KAAKN,SAASW,KAAKzB,IAEnBoB,KAAKN,SAASW,KAAK7B,KAuCzB,MAAMoC,EAGJ,YAAYgB,GACV5B,KAAK4B,OAASA,EAGhB,MAAMrB,GACJ,MAAMsB,EAAUtB,EAAQuB,SAA4BC,IAClD,MAAM3C,EAAIN,EAAkBiD,EAAOpD,KAAMqB,KAAK4B,QAC9C,OAAIxC,EAEK,IAAK2C,EAAQC,gBAAiB5C,GAEhC,MAET,MAAO,CACLQ,OAAQ,GAAGiC,EAAQxC,yBACnB8B,QAASU,IAKf,MAAMf,EAKJ,YAAYc,EAAgBpC,EAAoCD,GAC9DS,KAAK4B,OAASA,EACd5B,KAAKR,iBAAmBA,EACxBQ,KAAKT,YAAcA,EAGrB,MAAMgB,GACJ,MAAM0B,EAAgBjC,KAAKkC,cAC3B,GAA6B,IAAzBD,EAAc5C,OAChB,MAAO,CAAEO,OAAQ,oBAAqBuB,QAAS,IAGjD,MAAMgB,EAAsBnC,KAAKoC,iBAAiBH,GAClD,GAAgD,IAA5CI,OAAOC,KAAKH,GAAqB9C,OACnC,MAAO,CAAEO,OAAQ,eAAeqC,EAAc5C,wBAAyB8B,QAAS,IAGlF,MAAMU,EAAUtB,EAAQuB,SAASC,IAC/B,MAAMQ,EAASJ,EAAoBJ,EAAOpD,MAC1C,OAAK4D,EAIE,IAAKR,EAAQE,cAAeM,GAH1B,MAKX,MAAO,CACL3C,OAAQ,GAAGiC,EAAQxC,mBAAmB4C,EAAc5C,wBACpD8B,QAASU,GAIL,cACN,OAAOQ,OAAOG,QAAQxC,KAAKR,kBAAkBiD,QAA2B,CAACC,GAAMC,EAAWpC,MACxF,MAAMyB,EAAkBlD,EAAkB6D,EAAW3C,KAAK4B,QACpDgB,EAAa5C,KAAKT,YAAYoD,GAC9BE,EAAmBD,GAAc9D,EAAkB8D,EAAY5C,KAAK4B,QAC1E,OAAII,GAAmBa,EACdH,EAAII,OAAO,CAChBnE,KAAMgE,EACNX,gBAAiBA,GAAmBW,EACpCE,iBAAkBA,GAAoBD,EACtCrC,QAAAA,IAGGmC,IACN,IAGG,iBAAiBT,GACvB,OAAOA,EAAcQ,QAAgC,CAACM,EAAKC,KACzD,MAAM,KAAErE,EAAI,gBAAEqD,EAAe,iBAAEa,GAAqBG,EAUpD,OATAA,EAAMzC,SAASC,SAASY,IACtB,MAAM1C,EAAI,CACRC,KAAAA,EACAqD,gBAAAA,EACAa,iBAAAA,EACAI,MAAO7B,EAAE6B,OAEXF,EAAI3B,EAAEzC,OAASoE,EAAI3B,EAAEzC,OAAS,IAAImE,OAAOpE,MAEpCqE,IACN,O,yFChNP,eAEA,4BAAiCG,GAC/B,MAAMC,EAAkC,GACxC,MAAO,KACL,OAAQA,EAAe9D,QACrB,KAAK,EAOH,OANA8D,EAAenC,KACb,iBACQkC,IACNC,EAAeC,SAFjB,IAKKD,EAAe,GAExB,KAAK,EAAG,CACN,MAAME,EAAOF,EAAe,GAS5B,OARAA,EAAenC,KACb,iBACQqC,QACA,IAAAC,4BACAJ,IACNC,EAAeC,SAJjB,IAOKD,EAAe,GAExB,KAAK,EACH,OAAOA,EAAe,GACxB,QACE,MAAMI,MAAM,gCAAgCJ,EAAe9D,c,YC9BnE,SAAgBmE,EAAkBC,EAAyBC,EAAU,KAAM,qBAAqBD,MAC9F,GAAS,MAALA,EAAW,OAAOA,EACjB,MAAMF,MAAMG,KAGnB,SAAgBC,EAAeC,EAAYH,EAAiCC,EAAU,KAAM,oBAAoBE,MAC9G,GAAIA,aAAaH,EAAG,OAAOG,EAC3B,MAAML,MAAMG,KAsEd,SAAgBG,EAAWC,GACzB,MAAO,CAAEC,KAAM,UAAWD,GAI5B,SAAgBE,EAAwBC,EAAqBC,EAAsBC,GAEjF,MAAMC,EAAMH,EAAMI,QAAUH,EAAQI,MAASH,EAAWG,MAClDC,EAAMN,EAAMO,QAAUN,EAAQO,OAAUN,EAAWM,OACzD,GAAIL,EAAK,GAAKA,GAAMF,EAAQI,OAASC,EAAK,GAAKA,GAAML,EAAQO,OAC3D,OAAO,KAIT,MAAM/C,EAAI0C,EAAK7C,KAAKmD,MAAMR,EAAQI,MAAQ,GACpC3C,EAAIJ,KAAKmD,MAAMR,EAAQO,OAAS,GAAKF,EAC3C,OAAOV,EAAW,CAAEnC,EAAGH,KAAKC,MAAME,GAAIC,EAAGJ,KAAKC,MAAMG,K,4SA7FtD,mBAKA,gBAKA,qBAA+DgD,EAA+BlB,GAC5F,MAAMmB,EAAIpB,EACRqB,SAASC,eAAetB,EAAemB,GAAI,IAAM,6BAA6BA,QAC9E,IAAM,uBAAuBA,MAE/B,OAAOlB,EAAIE,EAAYiB,EAAGnB,GAAMmB,GAGlC,6BAAkCA,GAChC,KAAOA,EAAEG,WAAWH,EAAEI,YAAYJ,EAAEG,YAGtC,iCAAsCE,GACpC,OAAIA,EAAI,IACC,GAAGA,KAEL,IAAIA,EAAI,KAAMC,QAAQ,QAG/B,gCACE,OAAO,IAAIC,SAASC,GAAMC,sBAAsBD,MAQlD,wBACEE,EACAC,EACAC,EACAvB,GAEA,IAAKA,EAAO,MAAO,0BAEnB,MAAMJ,EAAaG,EAAwBC,EAAOqB,EAAKC,GACvD,GAAmB,OAAf1B,EACF,MAAO,0BAGT,MAAM4B,EAAID,EAAU3B,EAAYyB,IAAQ,IACxC,MAAO,QAAQzB,EAAWnC,WAAWmC,EAAWlC,YAAY8D,KAG9D,6BAAkCC,EAAkBH,GAClD,MAAM9G,EAAIoG,SAASc,cAAc,KACjClH,EAAEmH,SAAWF,EACbjH,EAAEoH,KAAON,EAAOO,UAAU,aAC1BrH,EAAEsH,SAGJ,uBAAOhG,eAAoCiG,GACzC,MAAMT,EAAS,IAAIU,gBAAgBD,EAAIvB,OAAQuB,EAAI1B,OAGnD,OAFgBd,EAAe+B,EAAOW,WAAW,OACzCC,UAAUH,EAAK,EAAG,SACZT,EAAOa,cAAc,CAAErC,KAAM,eAG7C,QAAOhE,eAAqBsG,GAC1B,OAAO,IAAIlB,SAASC,GAAMkB,WAAWlB,EAAGiB,MAG1C,uBAA4B3F,GAC1B,MAAO,CAAEqD,KAAM,UAAWrD,IAG5B,eAKA,4BAcA,0BAA+B4D,EAAeG,GAC5C,MAAO,CAAEV,KAAM,aAAcO,MAAAA,EAAOG,OAAAA,K,yJCjGtC,MAIMlE,EAAU,IAJhB,SAIoB,SACpBgG,MAAM,8BAA8BC,MAAKzG,MAAOqF,GAAO7E,EAAQf,uBAAyB4F,EAAEqB,SAC1FF,MAAM,wBAAwBC,MAAKzG,MAAOqF,GAAO7E,EAAQhB,kBAAoB6F,EAAEqB,SAE/EC,UAAY,EAAGC,KAAAA,MACbtE,OAAOuE,OAAOrG,EAASoG,GAAMrG,UAG/BC,EAAQsG,mBAAmBC,GAAMC,YAAYD,OCXzCE,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,QClBWJ,CAAoB,M","sources":["webpack://7dtd-map/./src/lib/prefabs.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/./src/worker/prefabs-filter.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/startup"],"sourcesContent":["import { throttledInvoker } from \"./throttled-invoker\";\n\nexport interface PrefabUpdate {\n  status: string;\n  prefabs: HighlightedPrefab[];\n}\n\ninterface PrefabHighlightedBlocks {\n  [prefabName: string]: HighlightedBlock[];\n}\n\nexport default class Prefabs {\n  all: Prefab[] = [];\n  blockLabels: BlockLabels = {};\n  blockPrefabIndex: BlockPrefabIndex = {};\n  filter: PrefabMatcher | null = null;\n  filtered: HighlightedPrefab[] = [];\n  markCoords: GameCoords | null = null;\n  status = \"\";\n\n  private throttledUpdater = throttledInvoker(async () => this.updateImmediately());\n  private updateListeners: ((u: PrefabUpdate) => void)[] = [];\n\n  update(): void {\n    this.throttledUpdater();\n  }\n  updateImmediately(): void {\n    this.applyFilter();\n    this.updateDist();\n    this.sort();\n    const update: PrefabUpdate = { status: this.status, prefabs: this.filtered };\n    this.updateListeners.forEach((f) => f(update));\n  }\n  set prefabsFilterString(filter: string) {\n    const s = filter.trim();\n    if (s.length === 0) {\n      this.filter = null;\n    } else {\n      this.filter = new PrefabNameMatcher(new RegExp(s, \"i\"));\n    }\n  }\n  set blocksFilterString(filter: string) {\n    const s = filter.trim();\n    if (s.length === 0) {\n      this.filter = null;\n    } else {\n      this.filter = new BlockNameMatcher(new RegExp(s, \"i\"), this.blockPrefabIndex, this.blockLabels);\n    }\n  }\n  addUpdateListener(func: (update: PrefabUpdate) => void): void {\n    this.updateListeners.push(func);\n  }\n\n  private applyFilter() {\n    if (this.filter) {\n      const result = this.filter.match(this.all);\n      this.status = result.status;\n      this.filtered = result.matched;\n    } else if (this.all.length === 0) {\n      this.status = \"No prefabs\";\n      this.filtered = [];\n    } else {\n      this.status = \"All prefabs\";\n      this.filtered = this.all;\n    }\n  }\n\n  private updateDist() {\n    if (this.markCoords) {\n      const { markCoords } = this;\n      this.filtered.forEach((p) => (p.dist = calcDist(p, markCoords)));\n    } else {\n      this.filtered.forEach((p) => (p.dist = null));\n    }\n  }\n  private sort() {\n    if (this.markCoords) {\n      this.status = `${this.status}, order by distances from the flag`;\n      this.filtered.sort(distSorter);\n    } else {\n      this.filtered.sort(nameSorter);\n    }\n  }\n}\n\nfunction nameSorter(a: { name: string }, b: { name: string }) {\n  if (a.name > b.name) return 1;\n  if (a.name < b.name) return -1;\n  return 0;\n}\n\nfunction distSorter(a: HighlightedPrefab, b: HighlightedPrefab) {\n  if (!a.dist || !b.dist) return nameSorter(a, b);\n  if (a.dist > b.dist) return 1;\n  if (a.dist < b.dist) return -1;\n  return nameSorter(a, b);\n}\n\nfunction calcDist(targetCoords: GameCoords, baseCoords: GameCoords) {\n  return Math.round(Math.sqrt((targetCoords.x - baseCoords.x) ** 2 + (targetCoords.z - baseCoords.z) ** 2));\n}\n\nfunction matchAndHighlight(str: string, regex: RegExp) {\n  let isMatched = false;\n  const highlighted = str.replace(regex, (m) => {\n    isMatched = m.length > 0;\n    return `<mark>${m}</mark>`;\n  });\n  return isMatched ? highlighted : null;\n}\n\ninterface PrefabMatcher {\n  match(prefabs: Prefab[]): PrefabMatcherResult;\n}\ninterface PrefabMatcherResult {\n  status: string;\n  matched: HighlightedPrefab[];\n}\n\nclass PrefabNameMatcher implements PrefabMatcher {\n  regexp: RegExp;\n\n  constructor(regexp: RegExp) {\n    this.regexp = regexp;\n  }\n\n  match(prefabs: Prefab[]) {\n    const results = prefabs.flatMap<HighlightedPrefab>((prefab) => {\n      const m = matchAndHighlight(prefab.name, this.regexp);\n      if (m) {\n        // Clone and add a new field;\n        return { ...prefab, highlightedName: m };\n      }\n      return [];\n    });\n    return {\n      status: `${results.length} matched prefabs`,\n      matched: results,\n    };\n  }\n}\n\nclass BlockNameMatcher implements PrefabNameMatcher {\n  regexp: RegExp;\n  blockPrefabIndex: BlockPrefabIndex;\n  blockLabels: BlockLabels;\n\n  constructor(regexp: RegExp, blockPrefabIndex: BlockPrefabIndex, blockLabels: BlockLabels) {\n    this.regexp = regexp;\n    this.blockPrefabIndex = blockPrefabIndex;\n    this.blockLabels = blockLabels;\n  }\n\n  match(prefabs: Prefab[]) {\n    const matchedBlocks = this.matchBlocks();\n    if (matchedBlocks.length === 0) {\n      return { status: \"No matched blocks\", matched: [] };\n    }\n\n    const matchedPrefabBlocks = this.matchPrefabTypes(matchedBlocks);\n    if (Object.keys(matchedPrefabBlocks).length === 0) {\n      return { status: `No prefabs, ${matchedBlocks.length} matched blocks`, matched: [] };\n    }\n\n    const results = prefabs.flatMap((prefab: Prefab) => {\n      const blocks = matchedPrefabBlocks[prefab.name];\n      if (!blocks) {\n        return [];\n      }\n      // Clone and add a new field;\n      return { ...prefab, matchedBlocks: blocks };\n    });\n    return {\n      status: `${results.length} prefabs, ${matchedBlocks.length} matched blocks`,\n      matched: results,\n    };\n  }\n\n  private matchBlocks() {\n    return Object.entries(this.blockPrefabIndex).reduce<HighlightedBlock[]>((arr, [blockName, prefabs]) => {\n      const highlightedName = matchAndHighlight(blockName, this.regexp);\n      const blockLabel = this.blockLabels[blockName];\n      const highlightedLabel = blockLabel && matchAndHighlight(blockLabel, this.regexp);\n      if (highlightedName || highlightedLabel) {\n        return arr.concat({\n          name: blockName,\n          highlightedName: highlightedName || blockName,\n          highlightedLabel: highlightedLabel || blockLabel,\n          prefabs,\n        });\n      }\n      return arr;\n    }, []);\n  }\n\n  private matchPrefabTypes(matchedBlocks: HighlightedBlock[]): PrefabHighlightedBlocks {\n    return matchedBlocks.reduce<PrefabHighlightedBlocks>((idx, block) => {\n      const { name, highlightedName, highlightedLabel } = block;\n      block.prefabs?.forEach((p) => {\n        const b = {\n          name,\n          highlightedName,\n          highlightedLabel,\n          count: p.count,\n        };\n        idx[p.name] = (idx[p.name] || []).concat(b);\n      });\n      return idx;\n    }, {});\n  }\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport function throttledInvoker(asyncFunc: () => Promise<void> | void): () => Promise<void> {\n  const workerPromises: Promise<void>[] = [];\n  return () => {\n    switch (workerPromises.length) {\n      case 0: {\n        workerPromises.push(\n          (async () => {\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[0];\n      }\n      case 1: {\n        const prev = workerPromises[0];\n        workerPromises.push(\n          (async () => {\n            await prev;\n            await waitAnimationFrame();\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[1];\n      }\n      case 2:\n        return workerPromises[1];\n      default:\n        throw Error(`Unexpected state: promiceses=${workerPromises.length}`);\n    }\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t != null) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: GameMapSize,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  const y = elevation(gameCoords, map) ?? \"-\";\n  return `E/W: ${gameCoords.x}, N/S: ${gameCoords.z}, Elev: ${y}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  context.drawImage(img, 0, 0);\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n","import Prefabs from \"../lib/prefabs\";\n\nexport type InMessage = Partial<Pick<Prefabs, \"all\" | \"prefabsFilterString\" | \"blocksFilterString\" | \"markCoords\">>;\n\nconst prefabs = new Prefabs();\nfetch(\"../block-prefab-index.json\").then(async (r) => (prefabs.blockPrefabIndex = await r.json()));\nfetch(\"../block-labels.json\").then(async (r) => (prefabs.blockLabels = await r.json()));\n\nonmessage = ({ data }: MessageEvent<InMessage>) => {\n  Object.assign(prefabs, data).update();\n};\n\nprefabs.addUpdateListener((u) => postMessage(u));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(770);\n"],"names":["nameSorter","a","b","name","distSorter","dist","matchAndHighlight","str","regex","isMatched","highlighted","replace","m","length","all","blockLabels","blockPrefabIndex","filter","filtered","markCoords","status","throttledUpdater","throttledInvoker","async","this","updateImmediately","updateListeners","applyFilter","updateDist","sort","update","prefabs","forEach","f","s","trim","PrefabNameMatcher","RegExp","BlockNameMatcher","func","push","result","match","matched","p","targetCoords","baseCoords","Math","round","sqrt","x","z","regexp","results","flatMap","prefab","highlightedName","matchedBlocks","matchBlocks","matchedPrefabBlocks","matchPrefabTypes","Object","keys","blocks","entries","reduce","arr","blockName","blockLabel","highlightedLabel","concat","idx","block","count","asyncFunc","workerPromises","shift","prev","waitAnimationFrame","Error","requireNonnull","t","message","requireType","o","gameCoords","c","type","canvasEventToGameCoords","event","mapSize","canvasSize","gx","offsetX","width","gz","offsetY","height","floor","id","e","document","getElementById","lastChild","removeChild","d","toFixed","Promise","r","requestAnimationFrame","map","canvas","elevation","y","fileName","createElement","download","href","toDataURL","click","img","OffscreenCanvas","getContext","drawImage","convertToBlob","msec","setTimeout","fetch","then","json","onmessage","data","assign","addUpdateListener","u","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}