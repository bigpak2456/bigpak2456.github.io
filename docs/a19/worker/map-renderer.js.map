{"version":3,"file":"worker/map-renderer.js","mappings":"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","sources":["webpack://7dtd-map/./src/lib/image-bitmap-holder.ts","webpack://7dtd-map/./src/lib/map-renderer.ts","webpack://7dtd-map/./src/lib/throttled-invoker.ts","webpack://7dtd-map/./src/lib/utils.ts","webpack://7dtd-map/./src/worker/map-renderer.ts","webpack://7dtd-map/webpack/bootstrap","webpack://7dtd-map/webpack/startup"],"sourcesContent":["import { imageBitmapToPngBlob, requireNonnull } from \"./utils\";\n\nconst IMG_AGE_MSEC = 10000;\n\nexport class ImageBitmapHolder {\n  private label;\n  _png: PngBlob | Promise<PngBlob>;\n  private img?: ImageBitmap | null;\n  private fallbackPromise: Promise<ImageBitmap> | null = null;\n  private lastAccessAt = 0;\n  private imgAge;\n\n  constructor(label: string, original: PngBlob | ImageBitmap, imgAge = IMG_AGE_MSEC) {\n    this.label = label;\n    if (isPngBlob(original)) {\n      this._png = original;\n    } else {\n      this._png = imageBitmapToPngBlob(original);\n      this.setImg(original);\n    }\n    this.imgAge = imgAge;\n  }\n\n  async get(): Promise<ImageBitmap> {\n    this.lastAccessAt = Date.now();\n    return this.img ?? this.fallbackPromise ?? this.getFallback();\n  }\n\n  private async getFallback() {\n    this.fallbackPromise = this.getImageBitmap();\n    return this.fallbackPromise;\n  }\n\n  private async getImageBitmap() {\n    console.debug(\"Fallback\", this.label);\n    const img = await createImageBitmap(await this._png);\n    this.setImg(img);\n    this.fallbackPromise = null;\n    return img;\n  }\n\n  private setImg(img: ImageBitmap) {\n    this.img = img;\n    setTimeout(() => this.expireImage(), this.imgAge);\n  }\n\n  private expireImage() {\n    if (Date.now() - this.lastAccessAt > this.imgAge) {\n      console.debug(\"Expire\", this.label);\n      requireNonnull(this.img).close();\n      this.img = null;\n    } else {\n      setTimeout(() => this.expireImage(), this.imgAge);\n    }\n  }\n}\n\nfunction isPngBlob(o: unknown): o is PngBlob {\n  return o instanceof Blob && o.type.toLowerCase() === \"image/png\";\n}\n","import { ImageBitmapHolder } from \"./image-bitmap-holder\";\nimport { throttledInvoker } from \"./throttled-invoker\";\nimport { gameMapSize } from \"./utils\";\n\nconst SIGN_CHAR = \"✘\";\nconst MARK_CHAR = \"🚩️\";\n\nexport default class MapRenderer {\n  brightness = \"100%\";\n  markerCoords: GameCoords | null = null;\n  scale = 0.1;\n  showPrefabs = true;\n  prefabs: HighlightedPrefab[] = [];\n  signSize = 200;\n  signAlpha = 1;\n  biomesAlpha = 1;\n  splat3Alpha = 1;\n  splat4Alpha = 1;\n  radAlpha = 1;\n\n  canvas: OffscreenCanvas;\n\n  update = throttledInvoker(async () => {\n    console.time(\"MapUpdate\");\n    await this.updateImmediately();\n    console.timeEnd(\"MapUpdate\");\n  });\n\n  private _biomesImg: ImageBitmapHolder | null = null;\n  private _splat3Img: ImageBitmapHolder | null = null;\n  private _splat4Img: ImageBitmapHolder | null = null;\n  private _radImg: ImageBitmapHolder | null = null;\n  private fontFace: FontFace;\n\n  constructor(canvas: OffscreenCanvas, fontFace: FontFace) {\n    this.canvas = canvas;\n    this.fontFace = fontFace;\n  }\n\n  set biomesImg(img: ImageBitmap | PngBlob | null) {\n    this._biomesImg = img ? new ImageBitmapHolder(\"biomes\", img) : null;\n  }\n  set splat3Img(img: ImageBitmap | PngBlob | null) {\n    this._splat3Img = img ? new ImageBitmapHolder(\"splat3\", img) : null;\n  }\n  set splat4Img(img: ImageBitmap | PngBlob | null) {\n    this._splat4Img = img ? new ImageBitmapHolder(\"splat4\", img) : null;\n  }\n  set radImg(img: ImageBitmap | PngBlob | null) {\n    this._radImg = img ? new ImageBitmapHolder(\"rad\", img) : null;\n  }\n\n  async size(): Promise<GameMapSize> {\n    const rects = await Promise.all([this._biomesImg?.get(), this._splat3Img?.get(), this._splat4Img?.get()]);\n    return gameMapSize({\n      width: Math.max(...rects.map((r) => r?.width ?? 0)),\n      height: Math.max(...rects.map((r) => r?.height ?? 0)),\n    });\n  }\n\n  private isBlank(): boolean {\n    return !this._biomesImg && !this._splat3Img && !this._splat4Img;\n  }\n\n  async updateImmediately(): Promise<void> {\n    if (this.isBlank()) {\n      this.canvas.width = 1;\n      this.canvas.height = 1;\n      return;\n    }\n\n    const { width, height } = await this.size();\n\n    this.canvas.width = width * this.scale;\n    this.canvas.height = height * this.scale;\n\n    const context = this.canvas.getContext(\"2d\");\n    if (!context) return;\n    context.scale(this.scale, this.scale);\n    context.filter = `brightness(${this.brightness})`;\n\n    if (this._biomesImg && this.biomesAlpha !== 0) {\n      context.globalAlpha = this.biomesAlpha;\n      context.drawImage(await this._biomesImg.get(), 0, 0, width, height);\n    }\n    if (this._splat3Img && this.splat3Alpha !== 0) {\n      context.globalAlpha = this.splat3Alpha;\n      context.drawImage(await this._splat3Img.get(), 0, 0, width, height);\n    }\n    if (this._splat4Img && this.splat4Alpha !== 0) {\n      context.globalAlpha = this.splat4Alpha;\n      context.drawImage(await this._splat4Img.get(), 0, 0, width, height);\n    }\n\n    context.filter = \"none\";\n    if (this._radImg && this.radAlpha !== 0) {\n      context.globalAlpha = this.radAlpha;\n      context.imageSmoothingEnabled = false;\n      context.drawImage(await this._radImg.get(), 0, 0, width, height);\n      context.imageSmoothingEnabled = true;\n    }\n\n    context.globalAlpha = this.signAlpha;\n    if (this.showPrefabs) {\n      this.drawPrefabs(context, width, height);\n    }\n    if (this.markerCoords) {\n      this.drawMark(context, width, height);\n    }\n  }\n\n  private drawPrefabs(ctx: OffscreenCanvasRenderingContext2D, width: number, height: number) {\n    ctx.font = `${this.signSize}px ${this.fontFace?.family ?? \"\"}`;\n    ctx.fillStyle = \"red\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n\n    const offsetX = width / 2;\n    const offsetY = height / 2;\n\n    const charOffsetX = Math.round(this.signSize * 0.01);\n    const charOffsetY = Math.round(this.signSize * 0.05);\n\n    // Inverted iteration to overwrite signs by higher order prefabs\n    for (let i = this.prefabs.length - 1; i >= 0; i -= 1) {\n      const prefab = this.prefabs[i];\n      const x = offsetX + prefab.x + charOffsetX;\n      // prefab vertical positions are inverted for canvas coodinates\n      const z = offsetY - prefab.z + charOffsetY;\n      putText(ctx, { text: SIGN_CHAR, x, z, size: this.signSize });\n    }\n  }\n\n  private drawMark(ctx: OffscreenCanvasRenderingContext2D, width: number, height: number) {\n    if (!this.markerCoords) return;\n\n    ctx.font = `${this.signSize}px ${this.fontFace?.family ?? \"\"}`;\n    ctx.fillStyle = \"red\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"alphabetic\";\n\n    const offsetX = width / 2;\n    const offsetY = height / 2;\n    const charOffsetX = -1 * Math.round(this.signSize * 0.32);\n    const charOffsetY = -1 * Math.round(this.signSize * 0.1);\n\n    const x = offsetX + this.markerCoords.x + charOffsetX;\n    const z = offsetY - this.markerCoords.z + charOffsetY;\n\n    putText(ctx, { text: MARK_CHAR, x, z, size: this.signSize });\n    ctx.strokeText(MARK_CHAR, x, z);\n    ctx.fillText(MARK_CHAR, x, z);\n  }\n}\n\ninterface MapSign {\n  text: string;\n  x: number;\n  z: number;\n  size: number;\n}\n\nfunction putText(ctx: OffscreenCanvasRenderingContext2D, { text, x, z, size }: MapSign) {\n  ctx.lineWidth = Math.round(size * 0.2);\n  ctx.strokeStyle = \"rgba(0, 0, 0, 0.8)\";\n  ctx.strokeText(text, x, z);\n\n  ctx.lineWidth = Math.round(size * 0.1);\n  ctx.strokeStyle = \"white\";\n  ctx.strokeText(text, x, z);\n\n  ctx.fillText(text, x, z);\n}\n","import { waitAnimationFrame } from \"./utils\";\n\nexport function throttledInvoker(asyncFunc: () => Promise<void> | void): () => Promise<void> {\n  const workerPromises: Promise<void>[] = [];\n  return () => {\n    switch (workerPromises.length) {\n      case 0: {\n        workerPromises.push(\n          (async () => {\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[0];\n      }\n      case 1: {\n        const prev = workerPromises[0];\n        workerPromises.push(\n          (async () => {\n            await prev;\n            await waitAnimationFrame();\n            await asyncFunc();\n            workerPromises.shift();\n          })()\n        );\n        return workerPromises[1];\n      }\n      case 2:\n        return workerPromises[1];\n      default:\n        throw Error(`Unexpected state: promiceses=${workerPromises.length}`);\n    }\n  };\n}\n","export function requireNonnull<T>(t: T | undefined | null, message = () => `Unexpected state: ${t}`): T {\n  if (t != null) return t;\n  else throw Error(message());\n}\n\nexport function requireType<T>(o: unknown, t: { new (...a: unknown[]): T }, message = () => `Unexpected type: ${o}`): T {\n  if (o instanceof t) return o;\n  throw Error(message());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | null | undefined, t?: { new (...a: unknown[]): T }): T {\n  const e = requireNonnull(\n    document.getElementById(requireNonnull(id, () => `Element ID must not null: ${id}`)),\n    () => `Element not found: #${id}`\n  );\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport function formatCoords(\n  map: GameMapSize,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords, mapSize: GameMapSize) => number | null,\n  event: EventOffsets | null\n): string {\n  if (!event) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) {\n    return \"E/W: -, N/S: -, Elev: -\";\n  }\n\n  const y = elevation(gameCoords, map) ?? \"-\";\n  return `E/W: ${gameCoords.x}, N/S: ${gameCoords.z}, Elev: ${y}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function imageBitmapToPngBlob(img: ImageBitmap): Promise<PngBlob> {\n  const canvas = new OffscreenCanvas(img.height, img.width);\n  const context = requireNonnull(canvas.getContext(\"2d\"));\n  context.drawImage(img, 0, 0);\n  return (await canvas.convertToBlob({ type: \"image/png\" })) as PngBlob;\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n","import { FontFaceSet } from \"css-font-loading-module\";\nimport MapRenderer from \"../lib/map-renderer\";\n\ndeclare const fonts: FontFaceSet;\n\nexport type InMessage = Partial<\n  Pick<\n    MapRenderer,\n    | \"canvas\"\n    | \"biomesImg\"\n    | \"splat3Img\"\n    | \"splat4Img\"\n    | \"radImg\"\n    | \"biomesAlpha\"\n    | \"splat3Alpha\"\n    | \"splat4Alpha\"\n    | \"radAlpha\"\n    | \"showPrefabs\"\n    | \"brightness\"\n    | \"scale\"\n    | \"signSize\"\n    | \"signAlpha\"\n    | \"prefabs\"\n    | \"markerCoords\"\n  >\n>;\n\nexport interface OutMessage {\n  mapSize: GameMapSize;\n}\n\ndeclare function postMessage(message: OutMessage): void;\n\nconst FONT_FACE = new FontFace(\"Noto Sans\", \"url(../NotoEmoji-Regular.ttf)\");\n\nlet map: MapRenderer | null = null;\n\nFONT_FACE.load().then(() => {\n  fonts.add(FONT_FACE);\n  map?.update();\n});\n\nonmessage = async (event: MessageEvent<InMessage>) => {\n  const message = event.data;\n  console.debug(message);\n  if (!map) {\n    if (message.canvas) {\n      map = new MapRenderer(message.canvas, FONT_FACE);\n    } else {\n      throw Error(\"Unexpected state\");\n    }\n  }\n  await Object.assign(map, message).update();\n  postMessage({ mapSize: await map.size() });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(179);\n"],"names":["label","original","imgAge","o","fallbackPromise","lastAccessAt","this","Blob","type","toLowerCase","_png","imageBitmapToPngBlob","setImg","Date","now","img","getFallback","getImageBitmap","console","debug","createImageBitmap","setTimeout","expireImage","requireNonnull","close","MARK_CHAR","putText","ctx","text","x","z","size","lineWidth","Math","round","strokeStyle","strokeText","fillText","canvas","fontFace","brightness","markerCoords","scale","showPrefabs","prefabs","signSize","signAlpha","biomesAlpha","splat3Alpha","splat4Alpha","radAlpha","update","throttledInvoker","async","time","updateImmediately","timeEnd","_biomesImg","_splat3Img","_splat4Img","_radImg","ImageBitmapHolder","rects","Promise","all","get","gameMapSize","width","max","map","r","height","isBlank","context","getContext","filter","globalAlpha","drawImage","imageSmoothingEnabled","drawPrefabs","drawMark","font","family","fillStyle","textAlign","textBaseline","offsetX","offsetY","charOffsetX","charOffsetY","i","length","prefab","asyncFunc","workerPromises","push","shift","prev","waitAnimationFrame","Error","t","message","requireType","gameCoords","c","canvasEventToGameCoords","event","mapSize","canvasSize","gx","gz","floor","id","e","document","getElementById","lastChild","removeChild","d","toFixed","requestAnimationFrame","elevation","y","fileName","a","createElement","download","href","toDataURL","click","OffscreenCanvas","convertToBlob","msec","s","FONT_FACE","FontFace","load","then","fonts","add","onmessage","data","Object","assign","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}